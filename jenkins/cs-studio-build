pipeline {
    agent any
    
    environment{
        MAVEN_OPTS="-Xmx2048m -Xms1024M -Xss128M -XX:-UseGCOverheadLimit"
        TODAY="""${sh(
                returnStdout: true,
                script: "echo \$(date +%F)"
            ).trim()}"""
    }
     stages {
         stage('Build'){
             steps{
                 echo 'Hello World'
                 sh 'mvn -version'
                 sh 'env'
             }
         }
         stage('setup-repo'){
             steps{
                git(url: "https://github.com/cs-studio-nsls2/build.git")
                sh "ls && pwd"
                sh "cd ${WORKSPACE}/p2repo && ls"
             }
         }
         stage('diirt'){
             steps{
                dir("diirt"){
                    git(branch: 'jdk9_and_11', url: "https://github.com/diirt/diirt.git")
                }
                sh "ls && pwd"
                sh "cd diirt && mvn -DskipTests=true clean install -Dcsstudio.composite.repo=${WORKSPACE}/p2repo -Dtycho.version=1.2.0 -e -X"
             }
         }
         stage('maven-osgi-bundles'){
             steps{
                dir("maven-osgi-bundles"){
                    git(url: "https://github.com/ControlSystemStudio/maven-osgi-bundles.git")
                }
                sh "ls && pwd"
                sh "cd maven-osgi-bundles && mvn -DskipTests=true clean verify -Dcsstudio.composite.repo=${WORKSPACE}/p2repo"
             }
         }
         stage('cs-studio-thirdparty'){
             steps{
                dir("cs-studio-thirdparty"){
                    git(url: "https://github.com/ControlSystemStudio/cs-studio-thirdparty.git")
                }
                sh "cd cs-studio-thirdparty && mvn -DskipTests=true clean verify -Dcsstudio.composite.repo=${WORKSPACE}/p2repo"
             }
         }
         stage('cs-studio'){
             steps{
                dir("cs-studio"){
                    git(url: "https://github.com/ControlSystemStudio/cs-studio.git")
                    dir('applications'){}
                    dir('core'){}
                }
                sh "ls && pwd"
                sh "cd cs-studio/core && mvn -DskipTests=true clean verify -Dcsstudio.composite.repo=${WORKSPACE}/p2repo"
                sh "cd cs-studio/applications && mvn -DskipTests=true clean verify -Dcsstudio.composite.repo=${WORKSPACE}/p2repo"
             }
        }
        stage('product') {
              steps{
                dir("org.csstudio.product"){
                    git(url: "https://github.com/ControlSystemStudio/org.csstudio.product.git")
                }
                sh "ls && pwd"
                sh "cd org.csstudio.product/org.csstudio.product && mvn -DskipTests=true clean verify -Dcsstudio.composite.repo=${WORKSPACE}/p2repo"
                }
        }
        stage('nsls2-product') {
              steps{
                dir("org.csstudio.nsls2.product"){
                    git(url: "https://github.com/cs-studio-nsls2/org.csstudio.nsls2.product.git")
                }
                sh "ls && pwd"
                sh "cd org.csstudio.nsls2.product && mvn -DskipTests=true clean verify -Dcsstudio.composite.repo=${WORKSPACE}/p2repo -Dnsls2.version=${TODAY}"
                sh "cd org.csstudio.nsls2.product/repository/target/products/ && ls"
                }
        }
     }
     post {
        always {
            archiveArtifacts artifacts: 'org.csstudio.nsls2.product/repository/target/products/*.zip,org.csstudio.nsls2.product/repository/target/products/*.tar.gz', fingerprint: true
        }
    }
}
